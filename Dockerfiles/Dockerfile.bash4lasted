#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "apply-templates.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

# FROM alpine:3.12
FROM alpine:3.12.1

# https://ftp.gnu.org/gnu/bash/?C=M;O=D
ENV _BASH_VERSION 4.4.23
ENV _BASH_BASELINE 4.4.18
ENV _BASH_BASELINE_PATCH 18
# https://ftp.gnu.org/gnu/bash/bash-4.4-patches/?C=M;O=D
ENV _BASH_LATEST_PATCH 23
# prefixed with "_" since "$BASH..." have meaning in Bash parlance

RUN set -eux; \
	\
	apk add --no-cache --virtual .build-deps \
		bison \
		coreutils \
		dpkg-dev dpkg \
		gcc \
		libc-dev \
		make \
		ncurses-dev \
		tar \
	; \
	\
	wget -O bash.tar.gz "https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.tar.gz"; \
	wget -O bash.tar.gz.sig "https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.tar.gz.sig"; \
	\
	: "${_BASH_BASELINE_PATCH:=0}" "${_BASH_LATEST_PATCH:=0}"; \
	if [ "$_BASH_LATEST_PATCH" -gt "$_BASH_BASELINE_PATCH" ]; then \
		mkdir -p bash-patches; \
		first="$(printf '%03d' "$(( _BASH_BASELINE_PATCH + 1 ))")"; \
		last="$(printf '%03d' "$_BASH_LATEST_PATCH")"; \
		majorMinor="${_BASH_VERSION%.*}"; \
		for patch in $(seq -w "$first" "$last"); do \
			url="https://ftp.gnu.org/gnu/bash/bash-$majorMinor-patches/bash${majorMinor//./}-$patch"; \
			wget -O "bash-patches/$patch" "$url"; \
			wget -O "bash-patches/$patch.sig" "$url.sig"; \
		done; \
	fi; \
	\
	apk add --no-cache --virtual .gpg-deps gnupg; \
	export GNUPGHOME="$(mktemp -d)"; \
# gpg: key 64EA74AB: public key "Chet Ramey <chet@cwru.edu>" imported
	gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 7C0135FB088AAF6C66C650B9BB5869F064EA74AB; \
	gpg --batch --verify bash.tar.gz.sig bash.tar.gz; \
	rm bash.tar.gz.sig; \
	if [ -d bash-patches ]; then \
		for sig in bash-patches/*.sig; do \
			p="${sig%.sig}"; \
			gpg --batch --verify "$sig" "$p"; \
			rm "$sig"; \
		done; \
	fi; \
	gpgconf --kill all; \
	rm -rf "$GNUPGHOME"; \
	apk del --no-network .gpg-deps; \
	\
	mkdir -p /usr/src/bash; \
	tar \
		--extract \
		--file=bash.tar.gz \
		--strip-components=1 \
		--directory=/usr/src/bash \
	; \
	rm bash.tar.gz; \
	\
	if [ -d bash-patches ]; then \
		apk add --no-cache --virtual .patch-deps patch; \
		for p in bash-patches/*; do \
			patch \
				--directory=/usr/src/bash \
				--input="$(readlink -f "$p")" \
				--strip=0 \
			; \
			rm "$p"; \
		done; \
		rmdir bash-patches; \
		apk del --no-network .patch-deps; \
	fi; \
	\
	cd /usr/src/bash; \
	gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; \
# update "config.guess" and "config.sub" to get more aggressively inclusive architecture support
	for f in config.guess config.sub; do \
		wget -O "support/$f" "https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb"; \
	done; \
	./configure \
		--build="$gnuArch" \
		--enable-readline \
		--with-curses \
# musl does not implement brk/sbrk (they simply return -ENOMEM)
#   bash: xmalloc: locale.c:81: cannot allocate 18 bytes (0 bytes allocated)
		--without-bash-malloc \
	|| { \
		cat >&2 config.log; \
		false; \
	}; \
	make -j "$(nproc)"; \
	make install; \
	cd /; \
	rm -r /usr/src/bash; \
	\
# delete a few installed bits for smaller image size
	rm -rf \
		/usr/local/share/doc/bash/*.html \
		/usr/local/share/info \
		/usr/local/share/locale \
		/usr/local/share/man \
	; \
	\
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --no-network --virtual .bash-rundeps $runDeps; \
	apk del --no-network .build-deps; \
	\
	[ "$(which bash)" = '/usr/local/bin/bash' ]; \
	bash --version; \
	[ "$(bash -c 'echo "${BASH_VERSION%%[^0-9.]*}"')" = "$_BASH_VERSION" ]; \
	bash -c 'help' > /dev/null

#COPY docker-entrypoint.sh /usr/local/bin/
#ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["bash"]


# https://github.com/tianon/docker-bash/blob/7d80c7cc5d829b6be9e04b6b2cba98a228fb67db/4.4/Dockerfile


# SET _TGT_DOCKERFILE_NAME=Dockerfile.bash4lasted
# SET _TGT_REV=4.4.23
# SET _TGT_DOCKERHUB_USER=tmsa34106

# docker build -f %APPDATA%\Docker\Dockerfiles\%_TGT_DOCKERFILE_NAME% -t bash:%_TGT_REV% .
# docker build -f %APPDATA%\Docker\Dockerfiles\%_TGT_DOCKERFILE_NAME% -t %_TGT_DOCKERHUB_USER%/bash:%_TGT_REV% .

# docker images bash:%_TGT_REV%
# docker images bash:%_TGT_REV% -q | CLIP
# SET _TGT_IMGID=
# docker run -it %_TGT_IMGID% bash

# docker push %_TGT_DOCKERHUB_USER%/bash:%_TGT_REV%





# bash5 のナレッジ

# docker build -f %APPDATA%\Docker\Dockerfiles\Dockerfile.bash5lasted -t bash5lasted .
# docker build -f %APPDATA%\Docker\Dockerfiles\Dockerfile.bash5lasted -t bash:5lasted .
# docker build -f %APPDATA%\Docker\Dockerfiles\Dockerfile.bash5lasted -t bash:5.1.0rc3 .
# docker build -f %APPDATA%\Docker\Dockerfiles\Dockerfile.bash5lasted -t tmsa34106/bash:5lasted .
# docker build -f %APPDATA%\Docker\Dockerfiles\Dockerfile.bash5lasted -t tmsa34106/bash:5.1.0rc3 .
# docker images | grep bash5lasted
# docker images bash5lasted -q # docker images | grep bash5lasted | gawk "{print $3}" | CLIP
# docker run -it c2d1a80aa34a bash
# # # exit
# docker ps -l -q 
# docker rm 10b570ab8507
# docker ps -l -a -q


# docker login
# docker push tmsa34106/bash:5.1.0rc3
# docker push tmsa34106/bash:5lasted


# 依存関係の消し方、なんかうまくいかない？
# https://qiita.com/matsuzan/items/d7de91564b1fadec27ca
# https://scribble.washo3.com/docker-cannot-image.html


# https://git.savannah.gnu.org/cgit/bash.git/
# これを使って、最新のコミットハッシュを取得する

# 2020/11/21 15:45:33.66 
# これだと bash5.1rc2 ?
# https://ftp.gnu.org/gnu/bash/
#  https://ftp.gnu.org/gnu/bash/bash-5.1-rc3.tar.gz
# https://github.com/tianon/docker-bash/blob/be3797835c035ee8b4a15ea1140c2eee05c90c7e/5.1-rc/Dockerfile




# 10min以上かかって、失敗した
# bash4 error log

# cat << COMMENT
# 
# C:\Users\makiosato>docker build -f %APPDATA%\Docker\Dockerfiles\Dockerfile.bash4lasted -t bash:4.4.23 .
# [+] Building 1198.8s (5/5) FINISHED
#  => [internal] load build definition from Dockerfile.bash4lasted                                                                        0.1s  => => transferring dockerfile: 5.65kB                                                                                                  0.0s  => [internal] load .dockerignore                                                                                                       0.1s  => => transferring context: 2B                                                                                                         0.1s  => [internal] load metadata for docker.io/library/alpine:3.12.1                                                                        5.1s  => CACHED [1/2] FROM docker.io/library/alpine:3.12.1@sha256:c0e9560cda118f9ec63ddefb4a173a2b2a0347082d7dff7dc14272e7841a5b5a           0.0s  => ERROR [2/2] RUN set -eux;   apk add --no-cache --virtual .build-deps   bison   coreutils   dpkg-dev dpkg   gcc   libc-dev   mak  1193.6s ------
#  > [2/2] RUN set -eux;          apk add --no-cache --virtual .build-deps                bison           coreutils               dpkg-dev dpkg
#                 gcc             libc-dev                make            ncurses-dev             tar     ;               wget -O bash.tar.gz "
#                                                                 wget -O bash.tar.gz.sig "https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.ta
#                         : "${_BASH_BASELINE_PATCH:=0}" "${_BASH_LATEST_PATCH:=0}";      if [ "$_BASH_LATEST_PATCH" -gt "$_BASH_BASELINE_PATCH
#                         mkdir -p bash-patches;          first="$(printf '%03d' "$(( _BASH_BASELINE_PATCH + 1 ))")";             last="$(print
#                                                 majorMinor="${_BASH_VERSION%.*}";               for patch in $(seq -w "$first" "$last"); do
# u                                                                                                               wget -O "bash-patches/$patch"
#                                 wget -O "bash-patches/$patch.sig" "$url.sig";           done;   fi;             apk add --no-cache --virtual
#                         export GNUPGHOME="$(mktemp -d)";        gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 7C0135FB088AAF
#                                 gpg --batch --verify bash.tar.gz.sig bash.tar.gz;       rm bash.tar.gz.sig;     if [ -d bash-patches ]; then
#                 for sig in bash-patches/*.sig; do                       p="${sig%.sig}";                        gpg --batch --verify "$sig" "
#                         rm "$sig";              done;   fi;     gpgconf --kill all;     rm -rf "$GNUPGHOME";    apk del --no-network .gpg-dep
#                 mkdir -p /usr/src/bash;         tar             --extract               --file=bash.tar.gz              --strip-components=1
#                 --directory=/usr/src/bash       ;       rm bash.tar.gz;                 if [ -d bash-patches ]; then            apk add --no-
#                                                 for p in bash-patches/*; do                     patch                           --directory=/
#                                         --input="$(readlink -f "$p")"                           --strip=0                       ;       r
#                         done;           rmdir bash-patches;             apk del --no-network .patch-deps;       fi;             cd /usr/src/b
#         gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";      for f in config.guess config.sub; do            wget -O "support/$f"
#                                                                                                         done;   ./configure             --bui
#                         --enable-readline               --with-curses           --without-bash-malloc   || {            cat >&2 config.log;
# f       };      make -j "$(nproc)";     make install;   cd /;   rm -r /usr/src/bash;            rm -rf          /usr/local/share/doc/bash/*.h
#                 /usr/local/share/info           /usr/local/share/locale                 /usr/local/share/man    ;               runDeps="$(
# s                                                                                       | tr ',' '\n'                   | sort -u       |
#                                                                                 )";     apk add --no-network --virtual .bash-rundeps $runDeps
#         apk del --no-network .build-deps;               [ "$(which bash)" = '/usr/local/bin/bash' ];    bash --version;         [ "$(bash -c
#                                                                 bash -c 'help' > /dev/null:
# #5 0.625 + apk add --no-cache --virtual .build-deps bison coreutils dpkg-dev dpkg gcc libc-dev make ncurses-dev tar
# #5 0.665 fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz
# #5 3.419 fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz
# #5 6.469 (1/30) Upgrading musl (1.1.24-r9 -> 1.1.24-r10)
# #5 9.205 (2/30) Installing m4 (1.4.18-r1)
# #5 9.416 (3/30) Installing bison (3.6.2-r0)
# #5 11.19 (4/30) Installing libacl (2.2.53-r0)
# #5 11.37 (5/30) Installing libattr (2.4.48-r0)
# #5 11.47 (6/30) Installing coreutils (8.32-r0)
# #5 14.50 (7/30) Installing libbz2 (1.0.8-r1)
# #5 14.58 (8/30) Installing perl (5.30.3-r0)
# #5 102.2 (9/30) Installing pkgconf (1.7.2-r0)
# #5 103.4 (10/30) Installing dpkg-dev (1.20.0-r0)
# #5 105.5 (11/30) Installing tar (1.32-r1)
# #5 106.2 (12/30) Installing dpkg (1.20.0-r0)
# #5 109.9 (13/30) Installing libgcc (9.3.0-r2)
# #5 110.1 (14/30) Installing libstdc++ (9.3.0-r2)
# #5 111.6 (15/30) Installing binutils (2.34-r1)
# #5 144.4 (16/30) Installing gmp (6.2.0-r0)
# #5 146.0 (17/30) Installing isl (0.18-r0)
# #5 163.6 (18/30) Installing libgomp (9.3.0-r2)
# #5 163.8 (19/30) Installing libatomic (9.3.0-r2)
# #5 163.8 (20/30) Installing libgphobos (9.3.0-r2)
# #5 171.4 (21/30) Installing mpfr4 (4.0.2-r4)
# #5 171.8 (22/30) Installing mpc1 (1.1.0-r1)
# #5 171.8 (23/30) Installing gcc (9.3.0-r2)
# #5 1034. (24/30) Installing musl-dev (1.1.24-r10)
# #5 1057. (25/30) Installing libc-dev (0.7.2-r3)
# #5 1057. (26/30) Installing make (4.3-r0)
# #5 1058. (27/30) Installing ncurses-terminfo-base (6.2_p20200523-r0)
# #5 1058. (28/30) Installing ncurses-libs (6.2_p20200523-r0)
# #5 1060. (29/30) Installing ncurses-dev (6.2_p20200523-r0)
# #5 1061. (30/30) Installing .build-deps (20201123.060046)
# #5 1061. Executing busybox-1.31.1-r19.trigger
# #5 1061. OK: 184 MiB in 43 packages
# #5 1061. + wget -O bash.tar.gz https://ftp.gnu.org/gnu/bash/bash-4.4.18.tar.gz
# #5 1061. Connecting to ftp.gnu.org (209.51.188.20:443)
# #5 1063. saving to 'bash.tar.gz'
# #5 1063. bash.tar.gz            0% |                                |     0 --:--:-- ETA
# #5 1064. bash.tar.gz            1% |                                |  160k  0:01:53 ETA
# #5 1065. bash.tar.gz            3% |*                               |  336k  0:01:19 ETA
# #5 1066. bash.tar.gz            5% |*                               |  512k  0:01:08 ETA
# #5 1067. bash.tar.gz            8% |**                              |  768k  0:00:55 ETA
# #5 1068. bash.tar.gz           10% |***                             |  992k  0:00:49 ETA
# #5 1069. bash.tar.gz           13% |****                            | 1232k  0:00:45 ETA
# #5 1070. bash.tar.gz           15% |****                            | 1440k  0:00:43 ETA
# #5 1071. bash.tar.gz           17% |*****                           | 1632k  0:00:41 ETA
# #5 1072. bash.tar.gz           18% |******                          | 1744k  0:00:42 ETA
# #5 1073. bash.tar.gz           20% |******                          | 1920k  0:00:41 ETA
# #5 1074. bash.tar.gz           22% |*******                         | 2080k  0:00:41 ETA
# #5 1075. bash.tar.gz           24% |*******                         | 2272k  0:00:39 ETA
# #5 1076. bash.tar.gz           26% |********                        | 2464k  0:00:38 ETA
# #5 1077. bash.tar.gz           28% |*********                       | 2640k  0:00:37 ETA
# #5 1078. bash.tar.gz           30% |*********                       | 2800k  0:00:36 ETA
# #5 1079. bash.tar.gz           32% |**********                      | 2960k  0:00:36 ETA
# #5 1080. bash.tar.gz           33% |**********                      | 3088k  0:00:35 ETA
# #5 1081. bash.tar.gz           34% |***********                     | 3184k  0:00:36 ETA
# #5 1082. bash.tar.gz           36% |***********                     | 3344k  0:00:35 ETA
# #5 1083. bash.tar.gz           37% |************                    | 3472k  0:00:34 ETA
# #5 1084. bash.tar.gz           38% |************                    | 3584k  0:00:34 ETA
# #5 1085. bash.tar.gz           40% |************                    | 3712k  0:00:34 ETA
# #5 1086. bash.tar.gz           41% |*************                   | 3808k  0:00:34 ETA
# #5 1087. bash.tar.gz           42% |*************                   | 3920k  0:00:33 ETA
# #5 1088. bash.tar.gz           43% |*************                   | 4016k  0:00:33 ETA
# #5 1089. bash.tar.gz           44% |**************                  | 4096k  0:00:33 ETA
# #5 1090. bash.tar.gz           45% |**************                  | 4160k  0:00:34 ETA
# #5 1091. bash.tar.gz           46% |**************                  | 4256k  0:00:33 ETA
# #5 1092. bash.tar.gz           47% |***************                 | 4368k  0:00:33 ETA
# #5 1093. bash.tar.gz           48% |***************                 | 4464k  0:00:33 ETA
# #5 1094. bash.tar.gz           49% |***************                 | 4560k  0:00:32 ETA
# #5 1095. bash.tar.gz           49% |***************                 | 4592k  0:00:33 ETA
# #5 1096. bash.tar.gz           50% |****************                | 4704k  0:00:32 ETA
# #5 1097. bash.tar.gz           51% |****************                | 4768k  0:00:32 ETA
# #5 1098. bash.tar.gz           52% |****************                | 4848k  0:00:32 ETA
# #5 1099. bash.tar.gz           52% |****************                | 4880k  0:00:33 ETA
# #5 1100. bash.tar.gz           53% |*****************               | 4960k  0:00:32 ETA
# #5 1101. bash.tar.gz           54% |*****************               | 5024k  0:00:32 ETA
# #5 1102. bash.tar.gz           55% |*****************               | 5088k  0:00:32 ETA
# #5 1103. bash.tar.gz           55% |*****************               | 5168k  0:00:32 ETA
# #5 1104. bash.tar.gz           56% |*****************               | 5184k  0:00:32 ETA
# #5 1105. bash.tar.gz           56% |*****************               | 5184k  0:00:33 ETA
# #5 1107. bash.tar.gz           56% |******************              | 5232k  0:00:33 ETA
# #5 1107. bash.tar.gz           57% |******************              | 5280k  0:00:33 ETA
# #5 1108. bash.tar.gz           57% |******************              | 5312k  0:00:34 ETA
# #5 1109. bash.tar.gz           58% |******************              | 5392k  0:00:33 ETA
# #5 1110. bash.tar.gz           59% |******************              | 5456k  0:00:33 ETA
# #5 1111. bash.tar.gz           59% |*******************             | 5536k  0:00:32 ETA
# #5 1112. bash.tar.gz           60% |*******************             | 5616k  0:00:32 ETA
# #5 1113. bash.tar.gz           61% |*******************             | 5712k  0:00:31 ETA
# #5 1114. bash.tar.gz           62% |*******************             | 5744k  0:00:31 ETA
# #5 1116. bash.tar.gz           63% |********************            | 5888k  0:00:30 ETA
# #5 1116. bash.tar.gz           63% |********************            | 5888k  0:00:30 ETA
# #5 1117. bash.tar.gz           64% |********************            | 5984k  0:00:29 ETA
# #5 1118. bash.tar.gz           65% |********************            | 6032k  0:00:29 ETA
# #5 1119. bash.tar.gz           65% |********************            | 6064k  0:00:29 ETA
# #5 1120. bash.tar.gz           65% |*********************           | 6096k  0:00:29 ETA
# #5 1121. bash.tar.gz           66% |*********************           | 6160k  0:00:29 ETA
# #5 1122. bash.tar.gz           66% |*********************           | 6176k  0:00:29 ETA
# #5 1123. bash.tar.gz           67% |*********************           | 6256k  0:00:29 ETA
# #5 1124. bash.tar.gz           68% |*********************           | 6304k  0:00:28 ETA
# #5 1125. bash.tar.gz           68% |*********************           | 6336k  0:00:28 ETA
# #5 1126. bash.tar.gz           68% |*********************           | 6336k  0:00:29 ETA
# #5 1127. bash.tar.gz           68% |*********************           | 6336k  0:00:29 ETA
# #5 1128. bash.tar.gz           68% |*********************           | 6352k  0:00:30 ETA
# #5 1129. bash.tar.gz           68% |**********************          | 6368k  0:00:30 ETA
# #5 1131. bash.tar.gz           69% |**********************          | 6384k  0:00:30 ETA
# #5 1131. bash.tar.gz           69% |**********************          | 6384k  0:00:30 ETA
# #5 1132. bash.tar.gz           69% |**********************          | 6464k  0:00:30 ETA
# #5 1133. bash.tar.gz           70% |**********************          | 6528k  0:00:29 ETA
# #5 1135. bash.tar.gz           71% |**********************          | 6576k  0:00:29 ETA
# #5 1135. bash.tar.gz           71% |**********************          | 6592k  0:00:29 ETA
# #5 1136. bash.tar.gz           72% |***********************         | 6656k  0:00:28 ETA
# #5 1137. bash.tar.gz           72% |***********************         | 6720k  0:00:28 ETA
# #5 1138. bash.tar.gz           72% |***********************         | 6736k  0:00:28 ETA
# #5 1139. bash.tar.gz           73% |***********************         | 6768k  0:00:28 ETA
# #5 1140. bash.tar.gz           73% |***********************         | 6800k  0:00:28 ETA
# #5 1141. bash.tar.gz           74% |***********************         | 6848k  0:00:27 ETA
# #5 1142. bash.tar.gz           74% |***********************         | 6880k  0:00:27 ETA
# #5 1143. bash.tar.gz           74% |***********************         | 6912k  0:00:27 ETA
# #5 1144. bash.tar.gz           75% |************************        | 6944k  0:00:27 ETA
# #5 1145. bash.tar.gz           75% |************************        | 6960k  0:00:27 ETA
# #5 1146. bash.tar.gz           76% |************************        | 7040k  0:00:26 ETA
# #5 1147. bash.tar.gz           76% |************************        | 7088k  0:00:25 ETA
# #5 1148. bash.tar.gz           77% |************************        | 7152k  0:00:25 ETA
# #5 1149. bash.tar.gz           77% |************************        | 7184k  0:00:24 ETA
# #5 1150. bash.tar.gz           78% |*************************       | 7232k  0:00:24 ETA
# #5 1151. bash.tar.gz           78% |*************************       | 7248k  0:00:24 ETA
# #5 1152. bash.tar.gz           79% |*************************       | 7376k  0:00:22 ETA
# #5 1153. bash.tar.gz           80% |*************************       | 7424k  0:00:22 ETA
# #5 1154. bash.tar.gz           81% |*************************       | 7504k  0:00:21 ETA
# #5 1155. bash.tar.gz           82% |**************************      | 7616k  0:00:19 ETA
# #5 1156. bash.tar.gz           82% |**************************      | 7664k  0:00:19 ETA
# #5 1157. bash.tar.gz           84% |**************************      | 7776k  0:00:17 ETA
# #5 1158. bash.tar.gz           85% |***************************     | 7856k  0:00:16 ETA
# #5 1159. bash.tar.gz           86% |***************************     | 7984k  0:00:15 ETA
# #5 1160. bash.tar.gz           87% |****************************    | 8096k  0:00:13 ETA
# #5 1161. bash.tar.gz           88% |****************************    | 8192k  0:00:12 ETA
# #5 1162. bash.tar.gz           89% |****************************    | 8256k  0:00:11 ETA
# #5 1163. bash.tar.gz           90% |****************************    | 8336k  0:00:10 ETA
# #5 1164. bash.tar.gz           91% |*****************************   | 8432k  0:00:09 ETA
# #5 1165. bash.tar.gz           92% |*****************************   | 8560k  0:00:08 ETA
# #5 1166. bash.tar.gz           93% |*****************************   | 8656k  0:00:07 ETA
# #5 1167. bash.tar.gz           94% |******************************  | 8752k  0:00:05 ETA
# #5 1168. bash.tar.gz           95% |******************************  | 8816k  0:00:05 ETA
# #5 1169. bash.tar.gz           96% |******************************  | 8896k  0:00:04 ETA
# #5 1170. bash.tar.gz           97% |******************************* | 8992k  0:00:02 ETA
# #5 1171. bash.tar.gz           97% |******************************* | 9056k  0:00:02 ETA
# #5 1172. bash.tar.gz           99% |******************************* | 9152k  0:00:01 ETA
# #5 1173. bash.tar.gz          100% |********************************| 9241k  0:00:00 ETA
# #5 1173. 'bash.tar.gz' saved
# #5 1173. + wget -O bash.tar.gz.sig https://ftp.gnu.org/gnu/bash/bash-4.4.18.tar.gz.sig
# #5 1173. Connecting to ftp.gnu.org (209.51.188.20:443)
# #5 1194. wget: can't connect to remote host (209.51.188.20): Connection refused
# ------
# failed to solve with frontend dockerfile.v0: failed to build LLB: executor failed running [/bin/sh -c set -eux;                 apk add --no-
#                                         bison           coreutils               dpkg-dev dpkg           gcc             libc-dev        m
#                 ncurses-dev             tar     ;               wget -O bash.tar.gz "https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.tar.gz
#         wget -O bash.tar.gz.sig "https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.tar.gz.sig";                 : "${_BASH_BASELINE_PATCH:=0}
#                                 if [ "$_BASH_LATEST_PATCH" -gt "$_BASH_BASELINE_PATCH" ]; then          mkdir -p bash-patches;          first
#                                                                 last="$(printf '%03d' "$_BASH_LATEST_PATCH")";          majorMinor="${_BASH_V
#                         for patch in $(seq -w "$first" "$last"); do                     url="https://ftp.gnu.org/gnu/bash/bash-$majorMinor-pa
#                                                         wget -O "bash-patches/$patch" "$url";                   wget -O "bash-patches/$patch.
#                                 done;   fi;             apk add --no-cache --virtual .gpg-deps gnupg;   export GNUPGHOME="$(mktemp -d)";    g
#                                                                                                                 gpg --batch --verify bash.tar
#                         rm bash.tar.gz.sig;     if [ -d bash-patches ]; then            for sig in bash-patches/*.sig; do               p
#                                         gpg --batch --verify "$sig" "$p";                       rm "$sig";              done;   fi;     gpgco
#                 rm -rf "$GNUPGHOME";    apk del --no-network .gpg-deps;                 mkdir -p /usr/src/bash;         tar             --ext
#                 --file=bash.tar.gz              --strip-components=1            --directory=/usr/src/bash       ;       rm bash.tar.gz;     i
#                                         apk add --no-cache --virtual .patch-deps patch;                 for p in bash-patches/*; do     p
#                                 --directory=/usr/src/bash                               --input="$(readlink -f "$p")"                   -
#                                 ;                       rm "$p";                done;           rmdir bash-patches;             apk del --no-
#                         fi;             cd /usr/src/bash;       gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";      for f in conf
#                                         wget -O "support/$f" "https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c9
#                         done;   ./configure             --build="$gnuArch"              --enable-readline               --with-curses   -
#                         || {            cat >&2 config.log;             false;  };      make -j "$(nproc)";     make install;   cd /;   rm -r
#                                 rm -rf          /usr/local/share/doc/bash/*.html                /usr/local/share/info           /usr/local/sh
#                         /usr/local/share/man    ;               runDeps="$(             scanelf --needed --nobanner --format '%n#p' --recursi
#                                 | tr ',' '\n'                   | sort -u                       | awk 'system("[ -e /usr/local/lib/" $1 " ]")
#                                         )";     apk add --no-network --virtual .bash-rundeps $runDeps;  apk del --no-network .build-deps;   [
#                                                 bash --version;         [ "$(bash -c 'echo "${BASH_VERSION%%[^0-9.]*}"')" = "$_BASH_VERSION"
#         bash -c 'help' > /dev/null]: runc did not terminate sucessfully
#         
# COMMENT;

# google : "failed to build LLB"
# https://qiita.com/po3rin/items/4fa7686c271a20f89c66

